{"ast":null,"code":"var _jsxFileName = \"/Users/joey/watch-it/client/src/components/videoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoid,\n  onPlayerVisibleChange\n}) {\n  _s();\n  const [isPlayerVisible, setIsPlayerVisible] = useState(false);\n  const [opts, setOpts] = useState({\n    height: \"390\",\n    width: \"640\",\n    playerVars: {\n      autoplay: 0,\n      controls: 1\n    }\n  });\n  useEffect(() => {\n    if (onPlayerVisibleChange) {\n      onPlayerVisibleChange(isPlayerVisible);\n    }\n  }, [isPlayerVisible, onPlayerVisibleChange]);\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 640) {\n        setOpts({\n          height: \"195\",\n          width: \"320\",\n          playerVars: {\n            autoplay: 0,\n            controls: 1\n          }\n        });\n      } else if (window.innerWidth < 1024) {\n        setOpts({\n          height: \"293\",\n          width: \"480\",\n          playerVars: {\n            autoplay: 0,\n            controls: 1\n          }\n        });\n      } else {\n        setOpts({\n          height: \"390\",\n          width: \"640\",\n          playerVars: {\n            autoplay: 0,\n            controls: 1\n          }\n        });\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize(); // Call the function initially to set the correct size\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const handleLogoClick = () => {\n    setIsPlayerVisible(prev => !prev);\n  };\n  const closePlayer = () => {\n    setIsPlayerVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogoClick,\n        className: \"play-button border-none bg-transparent text-slate-50 text-center p-2 rounded-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-50 text-center\",\n          children: \"Trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faYoutube,\n          className: \"fa-inverse fa-3x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), isPlayerVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePlayer,\n          className: \"absolute top-4 right-4 text-white text-2xl\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: videoid,\n          opts: opts,\n          className: \"youtube-player border-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(VideoPlayer, \"2Qh8T+2QNnk9oPQbF4H3nHWV+9Y=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","YouTube","FontAwesomeIcon","faYoutube","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","videoid","onPlayerVisibleChange","_s","isPlayerVisible","setIsPlayerVisible","opts","setOpts","height","width","playerVars","autoplay","controls","handleResize","window","innerWidth","addEventListener","removeEventListener","handleLogoClick","prev","closePlayer","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","icon","videoId","_c","$RefreshReg$"],"sources":["/Users/joey/watch-it/client/src/components/videoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction VideoPlayer({ videoid, onPlayerVisibleChange }) {\n  const [isPlayerVisible, setIsPlayerVisible] = useState(false);\n  const [opts, setOpts] = useState({\n    height: \"390\",\n    width: \"640\",\n    playerVars: {\n      autoplay: 0,\n      controls: 1,\n    },\n  });\n\n  useEffect(() => {\n    if (onPlayerVisibleChange) {\n      onPlayerVisibleChange(isPlayerVisible);\n    }\n  }, [isPlayerVisible, onPlayerVisibleChange]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 640) {\n        setOpts({\n          height: \"195\",\n          width: \"320\",\n          playerVars: {\n            autoplay: 0,\n            controls: 1,\n          },\n        });\n      } else if (window.innerWidth < 1024) {\n        setOpts({\n          height: \"293\",\n          width: \"480\",\n          playerVars: {\n            autoplay: 0,\n            controls: 1,\n          },\n        });\n      } else {\n        setOpts({\n          height: \"390\",\n          width: \"640\",\n          playerVars: {\n            autoplay: 0,\n            controls: 1,\n          },\n        });\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize(); // Call the function initially to set the correct size\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const handleLogoClick = () => {\n    setIsPlayerVisible((prev) => !prev);\n  };\n\n  const closePlayer = () => {\n    setIsPlayerVisible(false);\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col items-center\">\n        <button\n          onClick={handleLogoClick}\n          className=\"play-button border-none bg-transparent text-slate-50 text-center p-2 rounded-full\"\n        >\n          <p className=\"text-slate-50 text-center\">Trailer</p>\n          <FontAwesomeIcon icon={faYoutube} className=\"fa-inverse fa-3x\" />\n        </button>\n\n        {/* Full-Screen YouTube Player */}\n        {isPlayerVisible && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n            <button\n              onClick={closePlayer}\n              className=\"absolute top-4 right-4 text-white text-2xl\"\n            >\n              &times;\n            </button>\n            <YouTube\n              videoId={videoid}\n              opts={opts}\n              className=\"youtube-player border-none\"\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}