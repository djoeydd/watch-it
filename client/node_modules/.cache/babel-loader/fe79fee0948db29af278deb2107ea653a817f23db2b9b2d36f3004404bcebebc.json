{"ast":null,"code":"var _jsxFileName = \"/Users/joey/watch-it/client/src/components/body.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { fetchTrendingMovies, fetchTrendingTV } from \"../services/tmdbService\";\nimport MovieCard from \"./movieCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [movies, setMovies] = useState([]); // State for movies\n  const [tvShows, setTvShows] = useState([]); // State for TV shows\n\n  const fetchMovies = useCallback(async () => {\n    try {\n      const data = await fetchTrendingMovies();\n      console.log(\"Fetched trending movies:\", data); // Log the API response\n      setMovies(data.results);\n    } catch (error) {\n      console.error(\"Error fetching trending movies:\", error);\n    }\n  }, []);\n\n  // Fetch trending TV shows from the API\n  const fetchTVShows = useCallback(async () => {\n    try {\n      const data = await fetchTrendingTV();\n      setTvShows(data.results);\n    } catch (error) {\n      console.error(\"Error fetching trending TV shows:\", error);\n    }\n  }, []);\n  const fetchMovieLogo = async id => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/images?language=en`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYmY1MWZjZDYzYTJmZWExODNmYzBlN2QxY2U5Y2IyYyIsIm5iZiI6MTczMjMzMTI0Ny41MDMzNTYyLCJzdWIiOiI2NzM4OWRlNjljMTZkYWZhMDZmOWExMmEiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.P8aqYptE9vZsLN9E3SMmHrEVi12mkUxXz1PRDe8j3_8\"\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n\n      // Check if the response status is OK\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json(); // Fetching data from API in JSON Format\n\n      // Extract the logo URL\n      const logo = data.logos && data.logos.length > 0 ? data.logos[0].file_path : null;\n      return logo;\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      return null;\n    }\n  };\n  const fetchMovieVideos = async id => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/videos?language=en-US`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYmY1MWZjZDYzYTJmZWExODNmYzBlN2QxY2U5Y2IyYyIsIm5iZiI6MTczMjMzMTI0Ny41MDMzNTYyLCJzdWIiOiI2NzM4OWRlNjljMTZkYWZhMDZmOWExMmEiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.P8aqYptE9vZsLN9E3SMmHrEVi12mkUxXz1PRDe8j3_8\"\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n\n      // Check if the response status is OK\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json(); // Fetching data from API in JSON Format\n\n      const trailers = data.results.filter(video => video.type === \"Trailer\");\n\n      // Check if teasers array is not empty before accessing the key property\n      const videoKey = trailer.length > 0 ? rrailer[0].key : null;\n      return videoKey;\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    fetchMovies(); // Calling the fetchTrendingMovies function only during the initial rendering of the app.\n    fetchTVShows(); // Calling the fetchTrendingTV function only during the initial rendering of the app.\n  }, [fetchMovies, fetchTVShows]); // Added fetchTrendingMovies and fetchTrendingTV to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-light text-2xl tracking-widest py-2\",\n          children: \"Popular Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4 px-0 overflow-x-auto py-4 md:py-2 xl:py-5 pe-4\",\n          children: movies.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-none w-[10rem] md:w-[12rem] lg:w-[13rem] xl:w-[15rem]\",\n            children: /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center text-light text-2xl tracking-widest bg-black py-2\",\n              children: \"Popular TV Shows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" bg-black\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4 px-0 overflow-x-auto py-4 md:py-2 xl:py-5 pe-4\",\n          children: tvShows.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-none w-[10rem] md:w-[12rem] lg:w-[13rem] xl:w-[15rem]\",\n            children: /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Body, \"fMYGwCJd1MqHyjZQ5Z345AgcOo4=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","fetchTrendingMovies","fetchTrendingTV","MovieCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","movies","setMovies","tvShows","setTvShows","fetchMovies","data","console","log","results","error","fetchTVShows","fetchMovieLogo","id","url","options","method","headers","accept","Authorization","response","fetch","ok","Error","status","json","logo","logos","length","file_path","fetchMovieVideos","trailers","filter","video","type","videoKey","trailer","rrailer","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","movie","_c","$RefreshReg$"],"sources":["/Users/joey/watch-it/client/src/components/body.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { fetchTrendingMovies, fetchTrendingTV } from \"../services/tmdbService\";\n\nimport MovieCard from \"./movieCard\";\n\nconst Body = () => {\n  const [movies, setMovies] = useState([]); // State for movies\n  const [tvShows, setTvShows] = useState([]); // State for TV shows\n\n  const fetchMovies = useCallback(async () => {\n    try {\n      const data = await fetchTrendingMovies();\n      console.log(\"Fetched trending movies:\", data); // Log the API response\n      setMovies(data.results);\n    } catch (error) {\n      console.error(\"Error fetching trending movies:\", error);\n    }\n  }, []);\n\n  // Fetch trending TV shows from the API\n  const fetchTVShows = useCallback(async () => {\n    try {\n      const data = await fetchTrendingTV();\n      setTvShows(data.results);\n    } catch (error) {\n      console.error(\"Error fetching trending TV shows:\", error);\n    }\n  }, []);\n\n  const fetchMovieLogo = async (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/images?language=en`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYmY1MWZjZDYzYTJmZWExODNmYzBlN2QxY2U5Y2IyYyIsIm5iZiI6MTczMjMzMTI0Ny41MDMzNTYyLCJzdWIiOiI2NzM4OWRlNjljMTZkYWZhMDZmOWExMmEiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.P8aqYptE9vZsLN9E3SMmHrEVi12mkUxXz1PRDe8j3_8\",\n      },\n    };\n\n    try {\n      const response = await fetch(url, options);\n\n      // Check if the response status is OK\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json(); // Fetching data from API in JSON Format\n\n      // Extract the logo URL\n      const logo =\n        data.logos && data.logos.length > 0 ? data.logos[0].file_path : null;\n      return logo;\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      return null;\n    }\n  };\n\n  const fetchMovieVideos = async (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/videos?language=en-US`;\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYmY1MWZjZDYzYTJmZWExODNmYzBlN2QxY2U5Y2IyYyIsIm5iZiI6MTczMjMzMTI0Ny41MDMzNTYyLCJzdWIiOiI2NzM4OWRlNjljMTZkYWZhMDZmOWExMmEiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.P8aqYptE9vZsLN9E3SMmHrEVi12mkUxXz1PRDe8j3_8\",\n      },\n    };\n\n    try {\n      const response = await fetch(url, options);\n\n      // Check if the response status is OK\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json(); // Fetching data from API in JSON Format\n\n      const trailers = data.results.filter((video) => video.type === \"Trailer\");\n\n      // Check if teasers array is not empty before accessing the key property\n      const videoKey = trailer.length > 0 ? rrailer[0].key : null;\n      return videoKey;\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies(); // Calling the fetchTrendingMovies function only during the initial rendering of the app.\n    fetchTVShows(); // Calling the fetchTrendingTV function only during the initial rendering of the app.\n  }, [fetchMovies, fetchTVShows]); // Added fetchTrendingMovies and fetchTrendingTV to the dependency array\n\n  return (\n    <>\n      <div className=\"bg-black px-4\">\n        <div className=\"\">\n          <h1 className=\"text-center text-light text-2xl tracking-widest py-2\">\n            Popular Movies\n          </h1>\n          <div className=\"flex space-x-4 px-0 overflow-x-auto py-4 md:py-2 xl:py-5 pe-4\">\n            {movies.map((item) => (\n              <div\n                key={item.id}\n                className=\"flex-none w-[10rem] md:w-[12rem] lg:w-[13rem] xl:w-[15rem]\"\n              >\n                <MovieCard movie={item} />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div>\n          <div>\n            <div>\n              <h1 className=\"text-center text-light text-2xl tracking-widest bg-black py-2\">\n                Popular TV Shows\n              </h1>\n            </div>\n          </div>\n        </div>\n        <div className=\" bg-black\">\n          <div className=\"flex space-x-4 px-0 overflow-x-auto py-4 md:py-2 xl:py-5 pe-4\">\n            {tvShows.map((item) => (\n              <div\n                key={item.id}\n                className=\"flex-none w-[10rem] md:w-[12rem] lg:w-[13rem] xl:w-[15rem]\"\n              >\n                <MovieCard movie={item} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Body;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}