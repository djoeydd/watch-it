{"ast":null,"code":"var _jsxFileName = \"/Users/joey/watch-it/client/src/components/videoPlayer.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoid\n}) {\n  _s();\n  const videoId = videoid;\n  const [isPlayerVisible, setIsPlayerVisible] = useState(false);\n  const handleLogoClick = () => {\n    setIsPlayerVisible(true);\n  };\n  const closePlayer = () => {\n    setIsPlayerVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-slate-50 text-center\",\n        children: \"Trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faYoutube,\n        className: \"fa-inverse fa-3x\",\n        onClick: handleLogoClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), isPlayerVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen-overlay\",\n        onClick: closePlayer,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${videoId}?autoplay=1`,\n          allow: \"autoplay; encrypted-media\",\n          allowFullScreen: true,\n          title: \"YouTube Video Player\",\n          className: \"youtube-player border-none w-full max-w-5xl h-[80vh]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(VideoPlayer, \"edBKJsuMpfdGPw+LDstexGeFGms=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faYoutube","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","videoid","_s","videoId","isPlayerVisible","setIsPlayerVisible","handleLogoClick","closePlayer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","src","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/joey/watch-it/client/src/components/videoPlayer.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction VideoPlayer({ videoid }) {\n  const videoId = videoid;\n  const [isPlayerVisible, setIsPlayerVisible] = useState(false);\n\n  const handleLogoClick = () => {\n    setIsPlayerVisible(true);\n  };\n\n  const closePlayer = () => {\n    setIsPlayerVisible(false);\n  };\n\n  return (\n    <>\n      <div>\n        <p className=\"text-slate-50 text-center\">Trailer</p>\n        <FontAwesomeIcon\n          icon={faYoutube}\n          className=\"fa-inverse fa-3x\"\n          onClick={handleLogoClick}\n        />\n\n        {/* Full-Screen YouTube Player */}\n        {isPlayerVisible && (\n          <div className=\"fullscreen-overlay\" onClick={closePlayer}>\n            <iframe\n              src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n              allow=\"autoplay; encrypted-media\"\n              allowFullScreen\n              title=\"YouTube Video Player\"\n              className=\"youtube-player border-none w-full max-w-5xl h-[80vh]\"\n            ></iframe>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,SAAS,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,WAAWA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAMC,OAAO,GAAGF,OAAO;EACvB,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5BD,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBF,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAGY,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpDhB,OAAA,CAACH,eAAe;QACdoB,IAAI,EAAEnB,SAAU;QAChBc,SAAS,EAAC,kBAAkB;QAC5BM,OAAO,EAAET;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,EAGDT,eAAe,iBACdP,OAAA;QAAKY,SAAS,EAAC,oBAAoB;QAACM,OAAO,EAAER,WAAY;QAAAC,QAAA,eACvDX,OAAA;UACEmB,GAAG,EAAE,iCAAiCb,OAAO,aAAc;UAC3Dc,KAAK,EAAC,2BAA2B;UACjCC,eAAe;UACfC,KAAK,EAAC,sBAAsB;UAC5BV,SAAS,EAAC;QAAsD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP;AAACX,EAAA,CArCQF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}