{"ast":null,"code":"var _jsxFileName = \"/Users/joey/watch-it/client/src/components/videoPlayer.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoid,\n  onPlayerVisibleChange\n}) {\n  _s();\n  const [isPlayerVisible, setIsPlayerVisible] = useState(false);\n  console.log(\"Video ID:\", videoid); // Debugging: Check if videoid is received correctly\n\n  useEffect(() => {\n    onPlayerVisibleChange(isPlayerVisible);\n  }, [isPlayerVisible, onPlayerVisibleChange]);\n  const handleLogoClick = () => {\n    setIsPlayerVisible(true);\n    console.log(`https://www.youtube.com/embed/${videoid}?autoplay=1`);\n  };\n  const closePlayer = () => {\n    setIsPlayerVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogoClick,\n        className: \" play-button border-none bg-white text-slate-50 text-center p-2 rounded-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-50 text-center\",\n          children: \"Trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faYoutube,\n          className: \"fa-inverse fa-3x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), isPlayerVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen-overlay \",\n        onClick: closePlayer,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${videoid}`,\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: \"YouTube Video Player\",\n          className: \"youtube-player border-none w-fit align-middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(VideoPlayer, \"YiTzzJuMq7D9K6+iShcXq2YddKc=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faYoutube","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","videoid","onPlayerVisibleChange","_s","isPlayerVisible","setIsPlayerVisible","console","log","handleLogoClick","closePlayer","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","icon","src","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/joey/watch-it/client/src/components/videoPlayer.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction VideoPlayer({ videoid, onPlayerVisibleChange }) {\n  const [isPlayerVisible, setIsPlayerVisible] = useState(false);\n  console.log(\"Video ID:\", videoid); // Debugging: Check if videoid is received correctly\n\n  useEffect(() => {\n    onPlayerVisibleChange(isPlayerVisible);\n  }, [isPlayerVisible, onPlayerVisibleChange]);\n\n  const handleLogoClick = () => {\n    setIsPlayerVisible(true);\n    console.log(`https://www.youtube.com/embed/${videoid}?autoplay=1`);\n  };\n\n  const closePlayer = () => {\n    setIsPlayerVisible(false);\n  };\n\n  return (\n    <>\n      <div>\n        <button\n          onClick={handleLogoClick}\n          className=\" play-button border-none bg-white text-slate-50 text-center p-2 rounded-full\"\n        >\n          <p className=\"text-slate-50 text-center\">Trailer</p>\n          <FontAwesomeIcon icon={faYoutube} className=\"fa-inverse fa-3x\" />\n        </button>\n\n        {/* Full-Screen YouTube Player */}\n        {isPlayerVisible && (\n          <div className=\"fullscreen-overlay \" onClick={closePlayer}>\n            <iframe\n              src={`https://www.youtube.com/embed/${videoid}`}\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n              title=\"YouTube Video Player\"\n              className=\"youtube-player border-none w-fit align-middle\"\n            ></iframe>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,SAAS,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC;AAAsB,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7Dc,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,OAAO,CAAC,CAAC,CAAC;;EAEnCR,SAAS,CAAC,MAAM;IACdS,qBAAqB,CAACE,eAAe,CAAC;EACxC,CAAC,EAAE,CAACA,eAAe,EAAEF,qBAAqB,CAAC,CAAC;EAE5C,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BH,kBAAkB,CAAC,IAAI,CAAC;IACxBC,OAAO,CAACC,GAAG,CAAC,iCAAiCN,OAAO,aAAa,CAAC;EACpE,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBJ,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA;MAAAa,QAAA,gBACEb,OAAA;QACEc,OAAO,EAAEH,eAAgB;QACzBI,SAAS,EAAC,8EAA8E;QAAAF,QAAA,gBAExFb,OAAA;UAAGe,SAAS,EAAC,2BAA2B;UAAAF,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpDnB,OAAA,CAACH,eAAe;UAACuB,IAAI,EAAEtB,SAAU;UAACiB,SAAS,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,EAGRZ,eAAe,iBACdP,OAAA;QAAKe,SAAS,EAAC,qBAAqB;QAACD,OAAO,EAAEF,WAAY;QAAAC,QAAA,eACxDb,OAAA;UACEqB,GAAG,EAAE,iCAAiCjB,OAAO,EAAG;UAChDkB,KAAK,EAAC,0FAA0F;UAChGC,eAAe;UACfC,KAAK,EAAC,sBAAsB;UAC5BT,SAAS,EAAC;QAA+C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP;AAACb,EAAA,CA3CQH,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA6CpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}